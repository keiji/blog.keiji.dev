<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>習作 on めがねをかけるんだ</title>
    <link>https://blog.keiji.dev/categories/%E7%BF%92%E4%BD%9C/</link>
    <description>Recent content in 習作 on めがねをかけるんだ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>Keiji ARIYAMA All rights reserved.</copyright>
    <lastBuildDate>Tue, 25 Aug 2020 15:00:10 +0900</lastBuildDate><atom:link href="https://blog.keiji.dev/categories/%E7%BF%92%E4%BD%9C/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>漫画ビューアー用カスタムビュー「MangaView」をオープンソースで公開した話</title>
      <link>https://blog.keiji.dev/2020/08/mangaview.html</link>
      <pubDate>Tue, 25 Aug 2020 15:00:10 +0900</pubDate>
      
      <guid>https://blog.keiji.dev/2020/08/mangaview.html</guid>
      <description>7月末でメインにしていた仕事の一角が終了したので、8月以降はそれなりに暇になりました。 次の仕事を探そうにも新型コロナウイルスでリモートワーク</description>
    </item>
    
    <item>
      <title>ELEGOO MARSの出力精度の改善</title>
      <link>https://blog.keiji.dev/2020/01/elegoo-mars_presision.html</link>
      <pubDate>Sat, 04 Jan 2020 18:00:10 +0900</pubDate>
      
      <guid>https://blog.keiji.dev/2020/01/elegoo-mars_presision.html</guid>
      <description>&lt;p&gt;　あけましておめでとうございます。御社の原稿、いまがんばって書いてます！&lt;/p&gt;
&lt;p&gt;　さて、昨年末のことになりますが、光造形３Dプリンター「ELEGOO MARS」を購入しました。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.keiji.dev/images/mars/mars_z-axis-12.jpg&#34; alt=&#34;ELEGOO MARS&#34;&gt;&lt;/p&gt;
&lt;p&gt;　ぼくは物作りの仕事をしているわけではないのですが、前々から3Dプリンターには憧れていて、ちょっと壊れた部品を自分でモデリングして出力できたら格好いいだろうなとか考えていました（Daddy Cool!）。&lt;/p&gt;
&lt;p&gt;「ELEGOO MARS」は、ぼくの手に入れたはじめての3Dプリンタです。&lt;/p&gt;
&lt;p&gt;「ELEGOO MARS」を買ってからは&lt;a href=&#34;https://twitter.com/keiji_ariyama/status/1201721035004841985&#34;&gt;サンプルデータの出力に失敗したり&lt;/a&gt;、&lt;a href=&#34;https://twitter.com/keiji_ariyama/status/1201722040887234560&#34;&gt;出力に失敗してFEPフィルムを傷めてしまったり&lt;/a&gt;、&lt;a href=&#34;https://twitter.com/keiji_ariyama/status/1202101585280548864&#34;&gt;サンプルデータの出力に成功したり&lt;/a&gt;、&lt;a href=&#34;https://twitter.com/keiji_ariyama/status/1208651347089690624&#34;&gt;FUSION 360でモデリングした漏斗をひたすら出力したり&lt;/a&gt;していたのですが、いくつか出力していくうちに、出力されるものの高さが、設計よりも低くなるとこに&lt;a href=&#34;https://twitter.com/keiji_ariyama/status/1206886901094875142&#34;&gt;気づきました&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;　出力した造形物を観察すると、だいたいボトムレイヤー（ベースに張り付けるために露光時間を長くする強固なレイヤー）より上の数層が広がったり潰れたりして、高さが失われているようです。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.keiji.dev/images/mars/mars_z-axis-8.jpg&#34; alt=&#34;ELEGOO MARS&#34;&gt;&lt;/p&gt;
&lt;p&gt;　一番お手軽な解決策はスライサーで出力物を持ち上げてサポートを付けることで潰れる部分に出力物が重ならないようにすることでしょう。
実際、Twitterでもクリエイト工房（&lt;a href=&#34;https://twitter.com/create_works&#34;&gt;@create_works&lt;/a&gt;）さんから同様の&lt;a href=&#34;https://twitter.com/create_works/status/1207265472833474560&#34;&gt;アドバイス&lt;/a&gt;をもらいました。&lt;/p&gt;
&lt;p&gt;　そうは言っても、3Dプリンターをこれと言った目的もなく買ってしまった僕です。手段を目的にするのは当然の流れです。
解決のためにいろいろやって、ようやくある程度の精度を出せるようになったので、同じ現象で悩んでいる人のためにブログに知見をまとめておきます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gehirn RS2 Plusに引っ越しした</title>
      <link>https://blog.keiji.dev/2018/12/move_to_gehirn_rs2_plus.html</link>
      <pubDate>Mon, 31 Dec 2018 00:00:00 +0900</pubDate>
      
      <guid>https://blog.keiji.dev/2018/12/move_to_gehirn_rs2_plus.html</guid>
      <description>&lt;p&gt;　タイトルの通り、このブログを含めたいくつかのサイトを&lt;a href=&#34;https://www.gehirn.jp/rs2plus/&#34;&gt;Gehirn RS2 Plus&lt;/a&gt;に引っ越しました。同時にStatic Site Generator（静的サイトジェネレーター) &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;を使って静的サイト化しています。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>機械学習のモデルを試せるサイトを作った話</title>
      <link>https://blog.keiji.dev/2019/01/meganeco_playground.html</link>
      <pubDate>Thu, 11 Jan 2018 00:00:00 +0900</pubDate>
      
      <guid>https://blog.keiji.dev/2019/01/meganeco_playground.html</guid>
      <description>三年前から個人的に構築している趣味の画像収集システム「MeganeCo」で利用している機械学習モデルを試せるサイトを公開しました。 MeganeCo Playground 画像を</description>
    </item>
    
    <item>
      <title>さよならMac</title>
      <link>https://blog.keiji.dev/2017/01/demodori.html</link>
      <pubDate>Mon, 30 Jan 2017 10:28:47 +0000</pubDate>
      
      <guid>https://blog.keiji.dev/2017/01/demodori.html</guid>
      <description>&lt;p&gt;　ぼくは有山圭二。Macユーザーだ。&lt;/p&gt;
&lt;p&gt;　MacBook AirでMacに入門し、すぐにMacBook Proへ。以降、ずっとMacを使い続けてきた。&lt;/p&gt;
&lt;p&gt;　iOSアプリを開発する関係でMacから離れられなかったわけじゃない。ぼくの本業はAndroidアプリの開発だ。Androidアプリの開発環境はmacOSに加えて、Windows、Linuxでも動作する。実際、Macの前はUbuntuを使っていた。&lt;/p&gt;
&lt;p&gt;　ぼくは、Macが好きだから使っている。&lt;/p&gt;
&lt;p&gt;　いや、好きだった。&lt;/p&gt;
&lt;p&gt;　6年間、ぼくを公私ともに支えてくれたMacと、お別れすることにした。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>「さくらの高火力」でTensorFlow</title>
      <link>https://blog.keiji.dev/2016/12/tensorflow_advent_calendar.html</link>
      <pubDate>Mon, 12 Dec 2016 06:53:45 +0000</pubDate>
      
      <guid>https://blog.keiji.dev/2016/12/tensorflow_advent_calendar.html</guid>
      <description>&lt;p&gt;このエントリは「&lt;a href=&#34;http://qiita.com/advent-calendar/2016/tensorflow&#34;&gt;TensorFlow Advent Calendar&lt;/a&gt;」の12日目の記事です。&lt;/p&gt;
&lt;p&gt;これまで僕は、モデルの訓練には「GeForce GTX960」を積んだデスクトップマシンを使ってきました。&lt;/p&gt;
&lt;p&gt;この「GeForce GTX960」は、GPUだけあってちゃんと使えばCPUより格段に速いのですが、最高の性能というわけではありません。&lt;/p&gt;
&lt;p&gt;機械学習に取り組む中で、科学技術計算などを行う汎用目的(General Purpose)GPUや、複数のGPUで計算を並列化する「マルチGPU」に憧れがないと言えば嘘になります。&lt;/p&gt;
&lt;p&gt;しかし、GPUの１枚の価格や電気代、排熱の処理を考えると現実的でないと言う結論に落ち着いていました。&lt;/p&gt;
&lt;p&gt;今回、さくらインターネットの&lt;a href=&#34;https://www.sakura.ad.jp/koukaryoku/&#34;&gt;高火力コンピューティング&lt;/a&gt;が試用できたので、やってみたことをまとめます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>矩形切り出しツール「Region Cropper」を公開しました</title>
      <link>https://blog.keiji.dev/2016/09/about_region_cropper.html</link>
      <pubDate>Thu, 15 Sep 2016 07:17:36 +0000</pubDate>
      
      <guid>https://blog.keiji.dev/2016/09/about_region_cropper.html</guid>
      <description>&lt;p&gt;時間を見つけてはTensorFlow関係のあれこれをちまちま続けています。&lt;/p&gt;
&lt;p&gt;先日は「&lt;a href=&#34;https://www.pasonatech.co.jp/skill_up/event/naniwa_tech.jsp&#34;&gt;なにわTECH道&lt;/a&gt;」で、TensorFlowを使ったイラスト顔検出について発表しました。&lt;/p&gt;
&lt;h2 id=&#34;データセットの作成&#34;&gt;データセットの作成&lt;/h2&gt;
&lt;p&gt;これまで、機械学習に使う画像（データセット）の作成にはMacの「プレビュー」を使っていました。&lt;/p&gt;
&lt;p&gt;１枚ずつ画像を読み込んでクロッピング（トリミング）していたのですが、１枚の画像に複数の顔があるときや、あとで領域を微調整（特に領域を拡大）したいときが面倒でした。&lt;/p&gt;
&lt;p&gt;良さそうなツールがないか、少しばかり探してみたのですが、僕の思い描くような操作性のものがありませんでした。&lt;/p&gt;
&lt;p&gt;なければ作れば良い。&lt;/p&gt;
&lt;p&gt;そんなわけで、自分で画像の切り出しツールツール「Region Cropper」を開発しました。&lt;/p&gt;
&lt;p&gt;１人で使うのももったいないので、GitHubで公開します。&lt;/p&gt;
&lt;h2 id=&#34;region-cropper&#34;&gt;Region Cropper&lt;/h2&gt;
&lt;p&gt;GitHub: &lt;a href=&#34;https://github.com/keiji/region_cropper&#34;&gt;https://github.com/keiji/region_cropper&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.keiji.dev/wp-content/uploads/2016/09/set_region.png&#34; alt=&#34;set_region&#34; width=&#34;2048&#34; height=&#34;1580&#34; class=&#34;aligncenter size-full wp-image-1383&#34; /&gt;&lt;/p&gt;
&lt;p&gt;GUIのフレームワークに、使い慣れたSwingではなくJava FXを使いました。&lt;/p&gt;
&lt;p&gt;そのため、Java 8のUpdate40以降でしかきちんと動きません。&lt;/p&gt;
&lt;p&gt;以下、Region CropperのREADME.mdから。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【WIP】TensorFlowのExerciseをがんばっている</title>
      <link>https://blog.keiji.dev/2016/05/wip_trying_cifar10_exercise.html</link>
      <pubDate>Sun, 15 May 2016 20:15:23 +0000</pubDate>
      
      <guid>https://blog.keiji.dev/2016/05/wip_trying_cifar10_exercise.html</guid>
      <description>&lt;p&gt;　僕はいま、&lt;a href=&#34;https://events.google.com/io2016/&#34; target=&#34;_blank&#34;&gt;Google I/O 2016&lt;/a&gt;参加で渡米するにあたり、時差ボケ予防のために徹夜でこの記事を書いています。&lt;/p&gt;
&lt;h3 id=&#34;概要忙しい人向け&#34;&gt;概要（忙しい人向け）&lt;/h3&gt;
&lt;p&gt;　TensorFlowのチュートリアルにある課題（エクササイズ）に挑戦した。Softmaxの適用については比較的簡単だったが、Fully connected層をLocally connected層に変える課題については難航し、解決していない。&lt;/p&gt;
&lt;p&gt;　Locally connected層は、重み共有をしない畳み込み層である（&lt;a href=&#34;https://code.google.com/p/cuda-convnet/wiki/LayerParams#Locally-connected_layer_with_unshared_weights&#34; target=&#34;_blank&#34;&gt;cuda-convnet&lt;/a&gt;）。&lt;/p&gt;
&lt;p&gt;そこで、チュートリアルのモデルのFully connected層をConvolution層に置き換えたところ、学習が正常に行われなくなった。&lt;/p&gt;
&lt;p&gt;　TensorBoardを通じてモデルの状態を確認したところ、conv2層で勾配消失が起きていることがわかった。さらに調査を続けると、conv2層のweightsの初期値がcuda-convnetに記載されている値と異なっており、修正することで正常に学習できるようになった（数値の食い違いが意図的なものかは不明だが、修正を&lt;a href=&#34;https://github.com/tensorflow/tensorflow/pull/2374&#34; target=&#34;_blank&#34;&gt;Pull Request&lt;/a&gt;している）。&lt;/p&gt;
&lt;p&gt;　「重み共有（Shared weights/Tied weights）」をしないというLocally connectedの条件をTensorFlowでどのように実現するかは現時点でわかっていない。&lt;code&gt;depthwise_conv2d&lt;/code&gt;について検討したが、上手くいかないと判断している（出力フィルタの枚数を減らすことができないため）。&lt;/p&gt;
&lt;p&gt;　エクササイズについては、今後も調査を続けていく。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ABC 2016 Springで発表しました</title>
      <link>https://blog.keiji.dev/2016/03/abc-2016-spring.html</link>
      <pubDate>Sun, 13 Mar 2016 18:21:58 +0000</pubDate>
      
      <guid>https://blog.keiji.dev/2016/03/abc-2016-spring.html</guid>
      <description>3月12日に開催されたイベントAndroid Bazaar and Conference 2016 Spring で発表しました。 タイトルは『Google TensorFlowとAndroidが繋がる未</description>
    </item>
    
    <item>
      <title>Nexus 5Xが届いた今こそ adb tcpip が見直されるべき</title>
      <link>https://blog.keiji.dev/2015/10/adb_tcpip.html</link>
      <pubDate>Wed, 21 Oct 2015 04:50:42 +0000</pubDate>
      
      <guid>https://blog.keiji.dev/2015/10/adb_tcpip.html</guid>
      <description>&lt;p&gt;今朝、Nexus 5Xが届きました。指紋センサー搭載の憎いやつです。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.keiji.dev/wp-content/uploads/2015/10/R0004876-small.jpg&#34;&gt;&lt;img src=&#34;https://blog.keiji.dev/wp-content/uploads/2015/10/R0004876-small.jpg&#34; alt=&#34;R0004876-small&#34; width=&#34;1232&#34; height=&#34;816&#34; class=&#34;aligncenter size-full wp-image-574&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;で、このNexus 5X。接続端子がUSB Type Cなんです（Nexus 6Pもですが）。&lt;/p&gt;
&lt;p&gt;つまり、これまで使っていたMicro USBケーブルは使えません。&lt;/p&gt;
&lt;p&gt;さらにNexus 5Xの場合、Type Cのケーブルしか同梱されていないのでAmazonで事前に&lt;a href=&#34;http://amzn.to/1LJY1bL&#34;&gt;Type C-Aのケーブル&lt;/a&gt;を購入したりしていたわけです。&lt;/p&gt;
&lt;p&gt;そうは言ってもUSB Type Cは、まだまだ特殊なケーブル。何本も持ち歩くわけにはいきません。&lt;/p&gt;
&lt;p&gt;そこで昔懐かしのネットワーク経由のadb接続をすることにしました。&lt;/p&gt;
&lt;p&gt;ネットワーク経由で接続すれば、端末にUSBケーブルを繋ぐのはデバッグを始めるタイミングに限定できるのでいちいち取り出す必要がなくなります。また、複数人数で開発するときにケーブルを何本も用意しなくてもすみます（もちろん再起動したら同じ作業をする必要がありますが……）。&lt;/p&gt;
&lt;p&gt;ハッカソンなどのイベントでケーブルを忘れたときにも便利ですね！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>有山家の買い物メモ</title>
      <link>https://blog.keiji.dev/2014/01/happynewyear.html</link>
      <pubDate>Mon, 13 Jan 2014 17:11:11 +0000</pubDate>
      
      <guid>https://blog.keiji.dev/2014/01/happynewyear.html</guid>
      <description>&lt;p&gt;あけましておめでとうございます。本年もよろしくお願い致します。&lt;/p&gt;
&lt;p&gt;僕は年末から正月にかけて、実家に引きこもっていました。&lt;/p&gt;
&lt;h2 id=&#34;冬休みの自由研究&#34;&gt;冬休みの自由研究&lt;/h2&gt;
&lt;p&gt;引きこもってる間、何か出来ることはないかと考えていました。&lt;/p&gt;
&lt;p&gt;普段はAndroidアプリばかり作ってるし、かと言って執筆とかミスをできない仕事をする気にもなれず、なにか気軽に、新しいことをしようと思い、久しぶりにWebシステムに手を出してみました。&lt;/p&gt;
&lt;p&gt;そうして作ったのが**「有山家の買い物メモ」**です。&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt;
  &lt;a href=&#34;https://i.keiji.io&#34; target=&#34;_blank&#34;&gt;https://i.keiji.io/&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.keiji.dev/wp-content/uploads/2014/01/Screen-Shot-2014-01-13-at-12.38.00-PM.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://blog.keiji.dev/wp-content/uploads/2014/01/Screen-Shot-2014-01-13-at-12.38.00-PM-300x239.png&#34; alt=&#34;Screen Shot 2014-01-13 at 12.38.00 PM&#34; width=&#34;300&#34; height=&#34;239&#34; class=&#34;aligncenter size-medium wp-image-397&#34; srcset=&#34;https://blog.keiji.dev/wp-content/uploads/2014/01/Screen-Shot-2014-01-13-at-12.38.00-PM-300x239.png 300w, https://blog.keiji.dev/wp-content/uploads/2014/01/Screen-Shot-2014-01-13-at-12.38.00-PM-1024x817.png 1024w, https://blog.keiji.dev/wp-content/uploads/2014/01/Screen-Shot-2014-01-13-at-12.38.00-PM-624x498.png 624w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;機能&#34;&gt;機能&lt;/h2&gt;
&lt;p&gt;このシステムは、事前に登録したAmazonの商品を定期的に確認。価格が変動して、かつ所定の金額以下（または以上）になれば、メールで知らせます。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.keiji.dev/wp-content/uploads/2014/01/Screen-Shot-2014-01-13-at-12.38.48-PM.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://blog.keiji.dev/wp-content/uploads/2014/01/Screen-Shot-2014-01-13-at-12.38.48-PM-300x239.png&#34; alt=&#34;Screen Shot 2014-01-13 at 12.38.48 PM&#34; width=&#34;300&#34; height=&#34;239&#34; class=&#34;aligncenter size-medium wp-image-395&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;その名の通り、我が家の家族（主に母）に向けて作ったシステムなので、他の人が使うことを想定していませんが、せっかくなので公開します。&lt;/p&gt;
&lt;p&gt;もちろん、何か不都合があればすぐに公開を止めます。あっさりです。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>新しい&#34;Draw 9-patch Tool&#34;を公開しました。</title>
      <link>https://blog.keiji.dev/2013/02/newdraw9patchtool.html</link>
      <pubDate>Sun, 10 Feb 2013 08:22:00 +0000</pubDate>
      
      <guid>https://blog.keiji.dev/2013/02/newdraw9patchtool.html</guid>
      <description>&lt;p&gt;最近、「有山さんはもう&lt;strong&gt;Makers&lt;/strong&gt;の方に行っちゃったんだね。Androidはもうやってないんだよね」「いやいや、もちろんやってますよ。&lt;strong&gt;Android&lt;/strong&gt;」と言う会話があったので。&lt;/p&gt;
&lt;p&gt;Android SDKに同梱されている”&lt;strong&gt;Draw 9-patch Tool&lt;/strong&gt;“を、SWTをベースにリライトして、Eclipseのプラグインにしたので公開します。&lt;/p&gt;
&lt;div style=&#34;text-align: center;&#34;&gt;
  &lt;p&gt;
    &lt;span style=&#34;text-decoration: underline;&#34;&gt;このプラグインを使えば、開発者は、Eclipseの中だけで9-patch画像の作成や編集が出来ます。&lt;/span&gt;
  &lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
  &lt;a href=&#34;https://blog.keiji.dev/wp-content/uploads/2013/02/Screen-Shot-2013-02-10-at-3.43.04-PM.jpg&#34;&gt;&lt;img class=&#34;wp-image-53 aligncenter&#34; alt=&#34;Screen Shot 2013-02-10 at 3.43.04 PM&#34; src=&#34;https://blog.keiji.dev/wp-content/uploads/2013/02/Screen-Shot-2013-02-10-at-3.43.04-PM.jpg&#34; width=&#34;442&#34; height=&#34;260&#34; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;これまでは、Facebook/Twitter/Google+で、知り合い向けに公開していたのですが、もう少し公開範囲を広げることにしました。&lt;/p&gt;
&lt;p&gt;&lt;em id=&#34;__mceDel&#34;&gt;開発してまだ日が浅いので、Windows/Mac/Linuxの違い、Eclipseのバージョンの違いなどによって、不具合がある可能性があります。&lt;br /&gt; 不具合を見つけた方は、是非ともフィードバックしてください。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;フィードバックは、&lt;a href=&#34;http://www.facebook.com/keiji.ariyama&#34; target=&#34;_blank&#34;&gt;Facebook&lt;/a&gt;/Twitter/&lt;a href=&#34;https://plus.google.com/101075618639637989227?authuser=0&#34; target=&#34;_blank&#34;&gt;Google+&lt;/a&gt;、その他どんな手段でも構いません。宜しくお願いいたします。&lt;/p&gt;
&lt;h2 id=&#34;ダウンロード利用方法&#34;&gt;ダウンロード＆利用方法&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;draw9patch tool for Eclipse plugin &lt;span&gt;(MD5: 09b952ceea11d9d59984ad5d004b422d)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/keiji/draw9patch2/blob/master/bin/Draw9PatchPlugin.zip&#34;&gt;https://github.com/keiji/draw9patch2/blob/master/bin/Draw9PatchPlugin.zip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;zipを展開して、pluginsの中の”Draw9PatchEditor_*.jar”を、お使いのEclipseのpluginsディレクトリにコピーして下さい（Eclipseの再起動が必要です）。&lt;/p&gt;
&lt;p&gt;Eclipseの再起動後、パッケージエクスプローラーから、pngファイル(&lt;em&gt;e.g. “res/drawable-hdpi/ic_launcher.png”&lt;/em&gt;)をダブルクリックすると、”Draw 9-patch Tool”が起動します。&lt;/p&gt;
&lt;table cellspacing=&#34;0&#34; cellpadding=&#34;0&#34; align=&#34;center&#34;&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&#34;https://blog.keiji.dev/wp-content/uploads/2013/02/Screen-Shot-2013-02-10-at-4.00.32-PM.jpg&#34;&gt;&lt;img class=&#34;wp-image-60 aligncenter&#34; alt=&#34;Screen Shot 2013-02-10 at 4.00.32 PM&#34; src=&#34;https://blog.keiji.dev/wp-content/uploads/2013/02/Screen-Shot-2013-02-10-at-4.00.32-PM.jpg&#34; width=&#34;450&#34; height=&#34;273&#34; /&gt;&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td style=&#34;text-align: center;&#34;&gt;
      &lt;span&gt;この画像中のモザイクは、&lt;br /&gt; Pixelmatorで処理しました。&lt;/span&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>雨の日のArduino – UNO</title>
      <link>https://blog.keiji.dev/2013/01/arduino-uno.html</link>
      <pubDate>Wed, 23 Jan 2013 15:09:00 +0000</pubDate>
      
      <guid>https://blog.keiji.dev/2013/01/arduino-uno.html</guid>
      <description>&lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;
&lt;p&gt;僕の会社が入居しているビルは、主要道路に面している、いわゆる表店（おもてだな）にあります。&lt;/p&gt;
&lt;p&gt;また、駅からもそれほど離れておらず、比較的良い立地と言えるでしょう。&lt;/p&gt;
&lt;p&gt;僕はここを気に入っていて、かれこれ６年程、ここでお仕事をしているのですが、もちろん、不満がないわけではありません。今回はそんな話です。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
